{"version":3,"sources":["img/logoBreakingBad.png","components/ui/Header.js","components/characters/CharacterList.js","components/ui/Search.js","img/loading-chemical.gif","components/ui/Loading.js","components/characters/CharacterGrid.js","components/characters/Navigate.js","components/characters/CharacterDetails.js","components/Episodes/EpisodeDetails.js","img/breaking-bad2.jpg","components/Episodes/EpisodesList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CharacterList","item","to","char_id","name","Search","getQuery","useState","text","setText","type","placeholder","value","onChange","e","q","target","autoFocus","Loading","loading","style","width","margin","display","CharacterGrid","items","setItems","isLoading","setIsLoading","query","setQuery","useEffect","fetchItems","a","axios","result","data","map","Navigate","CharacterDetails","match","quotes","setQuotes","randomQuotes","getQuotes","charDets","params","id","charQuotes","replace","getDets","get","i","push","all","then","spread","allData","details","quote","class","img","height","color","appearance","season","status","length","index","EpisodeDetails","fetch","getEpisodeDets","json","title","episode","air_date","characters","character","EpisodesList","episode_id","Home","breakingbad","App","path","component","exact","Episodes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.facace04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoBreakingBad.e6ecab44.png\";","import React from 'react'\r\nimport logo from '../../img/logoBreakingBad.png'\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className='center'>\r\n\t\t\t<img src={logo} alt='' />\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport './CharacterList.css'\r\n\r\nconst CharacterList = ({item}) => {\r\n\r\n\treturn (\r\n\t\t<div className='charList'>\r\n\t\t\t <li><Link key={item.char_id} to={`/characterDetails/${item.char_id}, ${item.name}`}>{item.name}</Link></li>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharacterList","import React, { useState } from 'react'\r\n\r\nconst Search = ({ getQuery }) => {\r\n\r\n\tconst [text, setText] = useState('')\r\n\r\n\tconst onChange = (q) => {\r\n\t\tsetText(q)\r\n\t\tgetQuery(q)\r\n\t}\r\n\treturn (\r\n\t\t<section className='search'>\r\n\t\t\t<form>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype='text' \r\n\t\t\t\t\tclassName='form-control' \r\n\t\t\t\t\tplaceholder='Search Character'\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={(e) => onChange(e.target.value)}\r\n\t\t\t\t\tautoFocus />\r\n\t\t\t</form>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default Search","export default __webpack_public_path__ + \"static/media/loading-chemical.b51ad310.gif\";","import React from 'react'\r\nimport loading from '../../img/loading-chemical.gif'\r\n\r\nconst Loading = () => {\r\n\treturn (\r\n\t\t<img src={loading} \r\n\t\t\tstyle={{width: '350px', margin: 'auto', display: 'block', 'padding-top': '60px'}}\r\n\t\t\talt='Loading'\r\n\t\t\t/>\r\n\t)\r\n}\r\n\r\nexport default Loading","\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport CharacterList from './CharacterList'\r\nimport Search from '../ui/Search'\r\nimport Loading from '../ui/Loading'\r\n\r\nconst CharacterGrid = () => {\r\n\r\n\tconst [ items, setItems] = useState([])\r\n    const [ isLoading, setIsLoading] = useState(true)\r\n    const [ query, setQuery] = useState('')\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(`https://www.breakingbadapi.com/api/characters?name=${query}`)\r\n\r\n     //   console.log(result.data)\r\n        setItems(result.data)\r\n        setIsLoading(false)\r\n      }\r\n\r\n      fetchItems()\r\n      }, [query])\r\n\r\n\r\n\r\n\t//console.log(items)\r\n\r\n\r\n\treturn isLoading ? (<Loading />) : (\r\n\t\t<div className='container'>\r\n\t\t\t<Search getQuery={(q) => setQuery(q)} />\r\n\r\n\t\t\t<section className=\"chlist\">\r\n\t\t\t\t\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<CharacterList key={item.char_id} item={item}></CharacterList>\r\n\t\t\t\t))}\r\n\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharacterGrid","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Navigate.css'\r\n\r\nconst Navigate = () => {\r\n\treturn (\r\n\t\t<div className = \"nav\">\r\n\t\t<ul>\r\n\t\t\t<a><Link to=\"/\">Home</Link></a>\r\n\t\t\t<a><Link to=\"/episodes\">Episodes</Link></a>\r\n\t\t\t<a><Link to=\"/characters\">Characters</Link></a>\r\n\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Navigate","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './CharacterDetails.css'\r\nimport Loading from '../ui/Loading'\r\n\r\nconst CharacterDetails = ({match}) => {\r\n\t//console.log(match);\r\n\r\n\tconst [ items, setItems] = useState([])\r\n\tconst [ quotes, setQuotes] = useState([])\r\n\tconst [ isLoading, setIsLoading] = useState(true)\r\n\r\n\r\n      const fetchItems = async () => {\r\n        \r\n        var randomQuotes = [];\r\n        var quotes = [];\r\n        var getQuotes = {};\r\n        \r\n        const charDets = `https://www.breakingbadapi.com/api/characters/${match.params.id}`;\r\n        const charQuotes = `https://www.breakingbadapi.com/api/quote/random?author=${match.params.name.replace(/\\s/g, '+')}`;\t\r\n        const getDets = axios.get(charDets)\r\n        \r\n        //console.log(getDets)\r\n        \r\n        for(var i=0;i<5;i++){\r\n        \tgetQuotes = axios.get(charQuotes);\r\n        \trandomQuotes.push(getQuotes);\r\n        } \r\n      \r\n        axios.all([getDets,randomQuotes[0],randomQuotes[1], randomQuotes[2],randomQuotes[3],randomQuotes[4] ]).then(\r\n        \taxios.spread((...allData) => {\r\n        //\t\tconsole.log(allData)\r\n        \t\tconst details = allData[0].data\r\n        \t\t\r\n        \t\t//quotes.push(allData[1].data[0].quote)\r\n        \t\t\r\n        \t\tfor(var i=1;i<6;i++){\r\n        \t\t\tif(allData[i].data[0])\r\n        \t\t\t\tquotes.push(allData[i].data[0].quote)\r\n        \t\t}\r\n        \t\r\n\r\n        \t//\tconsole.log(quotes)\r\n\r\n        \t\tsetItems(details)\r\n        \t\tsetQuotes(quotes)\r\n        \t//\tconsole.log(quotes)\r\n        \t\tsetIsLoading(false)\r\n        \t}))\r\n\r\n      }\r\n      useEffect(() => {\r\n      \tfetchItems()\r\n      }, [])\r\n\r\n\treturn isLoading ? (<Loading />) :(\r\n\t\t\t<div>\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t<div class=\"Detscontainer\">\r\n\t\t\t\t\t\t<div class=\"image\">\r\n\t\t\t\t\t\t\t<img src={item.img} alt='' width=\"300\" height=\"300\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"text\">\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<h1>{item.name}</h1>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<strong style={{color:'bisque', 'font-family':'serif'}}>Appeared in seasons :</strong> {item.appearance.map(season => <i>{season}  </i>)}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t <strong style={{color:'bisque', 'font-family':'serif'}}>Status :</strong> <small><i>{item.status}</i></small>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t <strong style={{color:'bisque', 'font-family':'serif'}}>Quotes :</strong> <i>{quotes.length > 0 ? (quotes.map((quote,index) => <small><p key={index}><q>{quote}</q></p></small>)) : (<small><p><i>** No quotes available **</i></p></small>)}</i>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharacterDetails","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './EpisodeDetails.css'\r\nimport Loading from '../ui/Loading'\r\n\r\nconst EpisodeDetails = ({match}) => {\r\n\r\n\t//console.log(match);\r\n\r\n\tconst [ items, setItems] = useState([])\r\n\tconst [ isLoading, setIsLoading] = useState(true)\r\n\r\n\t     \r\n\t\tuseEffect(() => {\r\n\t\t\tfetchItems();\r\n\t\t}, [])\r\n\t     \r\n\r\n\t    const fetchItems = async () => {\r\n\r\n      \tconst getEpisodeDets = await fetch(`https://www.breakingbadapi.com/api/episodes/${match.params.id}`);\t\r\n        //console.log(getEpisodeDets)\r\n        const items = await getEpisodeDets.json();\r\n        //console.log(items)\r\n       // const result = await axios(`https://www.breakingbadapi.com/api/episodes/${match.params.id}`)\r\n\r\n      //  console.log(result.data)\r\n        setItems(items)\r\n        setIsLoading(false)\r\n      // \r\n      }\r\n\r\n\r\n\r\n\r\n\treturn isLoading ? (<Loading />) : (\r\n\t\t<div>\r\n\t\t<br/>\r\n\t\t{items.map(items => <div class=\"text\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t<div style={{'text-align': 'center'}}>\r\n\t\t\t\t\t\t\t\t\t\t<h1>{items.title}</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t<div class=\"float-container\">\r\n\t\t\t\t\t\t\t<div class=\"float-child\">\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t              \t\t\t\t<strong style={{color:'bisque', 'font-family':'serif'}}>Season :</strong> <i><small>{items.season}</small></i>\r\n\t\t           \t\t\t\t</li>\r\n\t\t           \t\t\t\t <li>\r\n\t\t             \t\t\t\t <strong style={{color:'bisque', 'font-family':'serif'}}>Episode : </strong> <i><small>{items.episode}</small></i>\r\n\t\t           \t\t \t\t</li>\r\n\t\t           \t\t\t\t<li>\r\n\t\t             \t\t\t\t<strong style={{color:'bisque', 'font-family':'serif'}}>Air Date :</strong>  <i><small>{items.air_date}</small></i>\r\n\t\t           \t\t \t\t</li>\r\n\t\t           \t\t\t</div>\r\n\t\t           \t\t\t<div class=\"float-child\">\r\n\t\t           \t\t\t\t<li><i>\r\n\t\t             \t\t\t\t <strong style={{color:'bisque', 'font-family':'serif'}}>Characters Appeared :</strong>\r\n\t\t             \t\t\t\t <section className=\"eplist\">\t\t\t\t\r\n\t\t             \t\t\t\t  \t{items.characters.map(character => <small><ul>{character}</ul></small>)}\r\n\t\t             \t\t\t\t  </section>\r\n\r\n\t\t           \t\t \t\t</i></li>\r\n\t\t           \t\t \t</div>\r\n\t\t           \t\t</div>\r\n\t           \t</div>\r\n\t\t)}</div>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default EpisodeDetails","export default __webpack_public_path__ + \"static/media/breaking-bad2.2189c1f7.jpg\";","import React, { useState, useEffect }  from 'react'\r\nimport axios from 'axios'\r\nimport Loading from '../ui/Loading'\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst EpisodesList = () => {\r\n\r\n\r\n\tconst [ items, setItems] = useState([])\r\n    const [ isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(`https://www.breakingbadapi.com/api/episodes`)\r\n\r\n      //  console.log(result.data)\r\n        setItems(result.data)\r\n        setIsLoading(false)\r\n      }\r\n\r\n      fetchItems()\r\n      }, [])\r\n\r\n\r\n\r\n\t//console.log(items)\r\n\t\r\n\treturn isLoading ? (<Loading />) : (\r\n\t\t<div className='container'>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t<section className=\"chlist\">\t\t\t\t\r\n\t\t\t\t{items.map((item) => (\r\n\t\t\t\t\t\t<li><Link key={item.episode_id} to={`/episodeDetails/${item.episode_id}`}>{item.title}</Link></li>\r\n\t\t\t\t\t))}\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EpisodesList","import React, { useState, useEffect } from 'react'\nimport Header from './components/ui/Header'\nimport CharacterGrid from './components/characters/CharacterGrid'\nimport Search from './components/ui/Search'\nimport Navigate from './components/characters/Navigate'\nimport CharacterDetails from './components/characters/CharacterDetails'\nimport EpisodeDetails from './components/Episodes/EpisodeDetails'\nimport breakingbad from './img/breaking-bad2.jpg'\n\nimport axios from 'axios'\nimport './App.css';\nimport Episodes from './components/Episodes/EpisodesList'\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom'\n\nconst App = () => {\n\n\n  return  (\n    <Router>\n    <div className='container'>\n        <Header />\n        <Navigate />\n        <Switch>\n          <Route path=\"/\" component={Home}/>\n          <Route exact path=\"/episodes\" component={Episodes} />\n          <Route exact path=\"/episodeDetails/:id\" component={EpisodeDetails} />\n          <Route exact path=\"/characters\" component={CharacterGrid} />\n          <Route exact path=\"/characterDetails/:id, :name\" component={CharacterDetails} />\n        </Switch>\n      </div>\n    </Router>\n      )\n  \n}\n\n\nconst Home = () => (\n  <div class=\"homeImg\">\n      <img src={breakingbad} \n      style={{width: '80%', height: '350px', margin: 'auto', display: 'block', 'border-style': 'groove',\n    'border-radius': '8px'}} \n      alt=''/>\n  </div>\n\n  );\n//isLoading={isLoading} items={items}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}